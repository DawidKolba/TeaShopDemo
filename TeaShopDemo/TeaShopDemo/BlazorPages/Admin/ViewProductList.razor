@page "/app/admin/view-products"
@using Microsoft.JSInterop
@using TeaShopDemo.Models
@using TeaShopDemo.Services
@using Microsoft.AspNetCore.Components.Web
@inject ProductService ProductService
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<h4>Product List</h4>

@if (products == null)
{
    <p>Loading products...</p>
}
else if (products.Count == 0)
{
    <p>No products available.</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Price</th>
                <th>Description</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.Name</td>
                    <td>@product.Price.ToString()</td>
                    <td>@product.Description</td>
                    <td>
                        <button class="btn btn-primary btn-sm" @onclick="() => EditProduct(product.ProductId)">Edit</button>
                        <button class="btn btn-danger btn-sm" @onclick="() => DeleteProduct(product.ProductId)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Product> products;

    protected override async Task OnInitializedAsync()
    {
        products = await ProductService.GetProductsAsync();
    }

    private async Task DeleteProduct(int productId)
    {
        bool confirmed = await JSRuntime.InvokeAsync<bool>("window.confirm", "Are you sure you want to delete this product?");
        if (confirmed)
        {
            await ProductService.DeleteProductAsync(productId);
            products = await ProductService.GetProductsAsync();
        }
    }

    private void EditProduct(int productId)
    {
        NavigationManager.NavigateTo($"/admin/edit-product/{productId}");
    }
}
